CurrentProblem:
    -Todo:singlenton:why .. doesnt work but ../ does
    -Todo:parser:transfer path finder from invoker to parser
        -Todo:parser:interpret path or current dir
            -Todo:parser:Flags are either a pair or a terminal flag

    -Note:consider whether matching commands is better than tree implementation
        -Depends on how easy it is to interpret the token stream
        
    -Idea:Create a new grammar that interprets command calls
    and verifies whether a token stream is a suitable command call
        -contains core command , object and flags
            -core command is either a valid command or Invalid or lexical analyzer panics
            -object is either given or current dir
            -flags is either a terminal flag or a pair of flag and object

Project:
    -Todo:Logger to log output
        -parser operations
        -terminal operations

RCLi:
    -Todo:Change big if statemets to patterns
    -Todo:Handle errors better in general
        -Example:change the unwraping of UserInput
    -Todo:Reformat when the parser works to a certain acceptable degree
        -Todo:Add shorthand invocation. list -> ls
    -Todo:When rcli works fully in windows, make Unix variation. MacOS?


lexical:
    -Todo:rewrite tests since the singlenton broke them


invoker:
    -Note:Right now the second parameter is always a  path, what happens if it is a flag?


terminal:
    -Note:Every terminal instance should be a singlenton.
        -Therefore when a new terminal is started it is assigned a new singlenton.
    -Todo:change user interface to ratatui