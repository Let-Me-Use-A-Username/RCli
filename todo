CurrentProblem:
    RCLi:
        -parser/invoker:
            -Problem is this. 
                -Rethink Reader/Lexer/Parser/Invoker(?)
                -For certain commands (touch, grep) we require different position for the tokens
                    X   -Solution:Either fix it
                    -Solution2:Change grammar and therefore change (slightly) lexer and (whole) parser/invoker
                    X   -Solution3:Implement piping in a different way
                        -This will also require the parser to work differently, instead of recursive be something else
        -parser:
            -Remake the invocation call with new object
        -invoker: 
            -Remake the invocation extraction
        


    lexer/parser/bsftree:
        -Todo:Rewrite tests
        -Todo:Rewrite bsftree
    
        

STUDY: 
    -https://cheats.rs/#macros-attributes
    -Rust general
    
    http://www.linusakesson.net/programming/tty/
    https://mally.stanford.edu/~sr/computing/basic-unix.html
    https://swcarpentry.github.io/shell-novice/reference.html
    -Note:Read how Unix shell and commands work in order to mimick the functionality


Project:
    https://dhghomon.github.io/easy_rust/Chapter_61.html 
    -Todo:Logger to log output
        -parser operations
        -terminal operations
    -Note:When trying to cd in D:(Daddy) it instnaly goes to RCli project folder


invoker:
    -Implement echo
        -Prints to terminal
    -Implement cp ./ -d ../ --clean
        -Flag --clean Removes original files
    -Implement grep -p smt -any also implement recursive
        -Flag that will match anything (meaning convert names to lowercase, with space or not etc)
    -Implement ls -r 
        -Flag for recursive search
    -Implement ls -a
        -Flag to show types permissions and date 
            -Mainly to show types
    -Implement help
        -Shows available commands and invocation
    -Implement find
        -Searching dataset to match a string loosely
    -Implement shortcut 
        -Adds an alias for a executable (probably) and saves it in a retrievable document


terminal:
    -Note:Every terminal instance should be a singlenton.
        -Therefore when a new terminal is started it is assigned a new singlenton.
    
    https://docs.rs/crossterm/latest/crossterm/index.html#
    -Note:Accept raw input with Crossterm which is included in ratatui?
        -I.E. newline, CTRL^C etc
        -Handle with lexer or parser?